version: 2.1

jobs:
  build:
    working_directory: ~/foodtravel
    docker:
      - image: cimg/ruby:3.1.4
    steps:
      - checkout
      - run:
          name: Install dependencies
              command: |
                gem install bundler:2.3.26
                bundle install
      - run:
          name: Install MySQL
          command: |
            sudo apt-get update
            sudo apt-get install -y mysql-server
            sudo mysql -e "CREATE DATABASE IF NOT EXISTS foodtravel_test;"
            sudo mysql -e "CREATE USER '${DATABASE_USERNAME}'@'localhost' IDENTIFIED BY '${DATABASE_PASSWORD}';"
            sudo mysql -e "GRANT ALL PRIVILEGES ON foodtravel_test.* TO '${DATABASE_USERNAME}'@'localhost';"
            sudo mysql -e "FLUSH PRIVILEGES;"
      - run:
          name: Setup database
          command: |
            bundle exec rake rails db:create db:schema:load
      - run:
          name: Run RSpec tests
          command: bundle exec rspec

  rubocop:
    working_directory: ~/foodtravel
    docker:
      - image: cimg/ruby:3.1.4
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            gem install bundler:2.3.26
            bundle install
      - run:
          name: Run Rubocop
          command: bundle exec rubocop

  deploy:
    working_directory: ~/foodravel
    docker:
      - image: cimg/ruby:3.1.4
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            gem install bundler:2.3.26
            bundle install
      - run:
          name: Deploy to Heroku
          command: |
            echo 'machine api.heroku.com login $HEROKU_EMAIL password $HEROKU_API_KEY' > ~/.netrc
            echo 'machine git.heroku.com login $HEROKU_EMAIL password $HEROKU_API_KEY' >> ~/.netrc
            chmod 600 ~/.netrc
            git remote add heroku https://git.heroku.com/$HEROKU_APP_NAME.git
            git push heroku main

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - rubocop
      - deploy:
          requires:
            - build
            - rubocop
          filters:
            branches:
              only: main
